!Check Keywords "Warn"
!echo on

!Which mesh? 
$Mesh = "hoop_smpm_10deg_rotated"
$Step = "hoop_smpm"

$yearinsec = 31556926.0
$rhoi = 918.0/(1.0e6*yearinsec^2)
$rhow = 1028.0/(1.0e6*yearinsec^2) 
$gravity = -9.81*yearinsec^2
$n = 3.0
$viscexp = 1.0/3.0
$timestep = 1.0/12.0
$firsttimestep = 1.0/12.0
$Ao = 3.5*10^(-25)
$A = Ao * yearinsec * (1.0e18)
$B = (A)^(-1.0/n)
$eta = (2.0*A)^(-1.0/n)

$Dmax = 0.9 

$theta = 10.0

!the mass balance
$M = 0.0 !m/a

!grounded
$bed = -999999 !m

Header
  Mesh DB "./" "$Mesh$"
End

Constants

!-------------------------!
!     ICE PARAMETERS      !
!-------------------------!

Ice Density = Real $rhoi
Water Density = Real $rhow
Gravity = Real $gravity
Sea Level = Real 0.0

Maximum Time Step = Real 1.0
Critical Shear Rate = Real 1.0E-9 
Viscosity Exponent = Real $viscexp

Number of Particle Layers = Integer 8 
Number of Temperature Layers = Integer 8 

Constant Linear Temperature = Logical False 
surftemp = Real -16.702728357631656
basetemp = Real -2.0

Use Constant Temperature = Logical False 
Constant Temperature = Real 0.0

Use Given Eta = Logical True 
Given Eta = Real $B

Constant Friction Parameter = Logical True
fricparam = Real 0.0 

Constant MB Parameter = Logical True
mbparam = Real $M 

Constant EF Parameter = Logical True
efparam = Real 1.0

!-------------------------!
!         DAMAGE          !
!-------------------------!

!turn on to use damage
Use damage = Logical False
!Damage Model = String "zero stress"
Damage Model = String "creep"
Critical Damage = Real 0.85
Critical Dav = Real 0.5 
DMax I = Real 0.99 
DMax II = Real 0.99 
DMax III = Real 0.99
Dav DMax I = Real 0.9
Dav DMax II = Real 0.9
Dav DMax III = Real 0.9
ah = Real 0.21 
Bf = Real 16.5043 
Bh = Real 0.63 
k1 = Real 4.0  
k2 = Real 0.0 
gamma = Real 0.0 
rf = Real 0.43
sthres = Real 0.2
rift dmax = Real 0.9
use rift dmax = Logical True
Dinit Tolerance = Real 1.0e-08
Dinit Warning Tolerance= Real 5.0e-02 
Dinit Iters = Integer 5000 
No Init Dam = Logical True 
First aniso dt = Real 0.0
First zero stress dt = Real $timestep
Use time based rift healing = Logical False 
Use Isotropic Damage for Initially Damaged Particles = Logical False
Use Modified Murakami = Logical False
No Dzz = Logical False 
Fix Dav Principal Directions = Logical False 
Rupture All Damage Components for Rift = Logical True
Restrict Damage = Logical False
Use No Damage Region = Logical False
in Damage Threshold = Real 1.0e-10

!-------------------------!
!        MPM/GIMP         !
!-------------------------!

Shape Functions = String "smpm" 
Particle Element Fraction = Real 9.0
Grid Resolution = Real 500.0 

Move GL = Logical True 
Use SEP = Logical True  

!for particle allocation/splitting
Maximum Particle Length = Real 250.0 
Maximum Damaged Particle Length = Real 250.0 
Maximum Grounding Line Particle Length = Real 250.0
Dav Split Threshold = Real 0.1
Number Of Buffer Particles = Integer 0 

Use BC for PrevVel = Logical True

Update Particle Velocities for Friction = Logical False 
Use Coulomb Friction = Logical False 
Use Saved Basis = Logical False 

Always fill not full elements = Logical False
FEM fill element under percent = Real 0.0
cfl constant = Real 0.5

!-------------------------!
!      MISCELLANEOUS      !
!-------------------------!

First Timestep Zero = Logical True
Use Steady Timestep = Logical True 
Steady Timestep = Real $timestep

! MUST BE TRUE FOR THIS TEST!!!
hoop = Logical True
Unstructured mesh = Logical True
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!             SIMULATION              !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Simulation
  Coordinate System  = Cartesian 2D 
  Simulation Type = Transient
  Timestepping Method = String BDF
  BDF Order = Integer 2

!dummy value, as it will stop at 90 years anyway
  Timestep Intervals = Integer 99999  
   Output Intervals = Integer 0 

  Timestep Size 
  Real Procedure "./../PROG/MPM" "SSATimestep"

  Steady State Max Iterations = Integer 1
 
  Post File = "m_$Step$.vtu"

  max output level = 3 

  Restart Before Initial Conditions = Logical True
  Initialize Dirichlet Conditions = Logical True

  Set Dirichlet BCs by BC Numbering = True
End 

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!             BODY                    !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! The bulk
Body 1
Name = "ice"
  Equation = 1
  Body Force = 1
  Material = 1
  Initial Condition = 1
End


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!         INITIAL CONDITIONS          !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Initial Condition 1

  Hinit = Real 400.0  
  H = Equals Hinit

  Surface = Variable "coordinate 1","coordinate 2"
    Real Procedure "./USF_hoop" "hoopsurf"

  InitVelMag = Real 500.0


  InitVel 1 = Variable "coordinate 1","coordinate 2","InitVelMag"
    Real Procedure "./USF_hoop" "upstream_xvel_adj"


  InitVel 2 = Variable "coordinate 1","coordinate 2","InitVelMag"
    Real Procedure "./USF_hoop" "upstream_yvel_adj"

  PrevVel 1 = Real 0.0 
  PrevVel 2 = Real 0.0 

  SSAVelocity 1 = Real 0.0 
  SSAVelocity 2 = Real 0.0 

  icerises = real -1.0
  dmask = real -1.0

  InvVisc= Real $B 
  Rift = Real 0.0
  Rift2 = Real 0.0
  FP = Real 0.0
  Mask = Real -1.0
  EF = Real 1.0
  Bed = Real $bed
  MB = Real $M

  Particle B = Real $B 
  TempVar = Real 0.0
  Vstar = Real 0.0
  Vplus = Real 0.0

  inflow 1 = Real 0.0
  inflow 2 = Real 0.0
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!            BODY FORCE               !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Body Force 1
  Flow BodyForce 1 = Real 0.0                          
  Flow BodyForce 2 = Real 0.0
  Flow BodyForce 3 = Real $gravity

  !Each element has 4 nodes, all 4 to be positive to be a passive elem?
  Passive Element Min Nodes = Integer 1

  SSAVelocity Passive = Variable Surface
    Real Procedure "./../PROG/USF_MPM" "getpassive"

  SSAVelocity 1 = Equals InitVel 1
  SSAVelocity 1 Condition = Variable "Coordinate 1","Coordinate 2"
    Real Procedure "./USF_hoop" "constantvarssmpm"

  SSAVelocity 2 = Equals InitVel 2
  SSAVelocity 2 Condition = Variable "Coordinate 1","Coordinate 2"
    Real Procedure "./USF_hoop" "constantvarssmpm"

  H Lower Limit = Real 1.0

  inflow 1 = Equals SSAVelocity 1
  inflow 2 = Equals SSAVelocity 2
  
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!             MATERIAL                  !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Material 1               

  Viscosity Model = String "power law"

  SSA Mean Density = Real $rhoi
  SSA Mean Viscosity = Real $eta

  Critical Shear Rate = Real 1.0E-10 
  Viscosity Exponent = $1.0/n
  Density = Real $rhoi

  Min H = Real 1.0

  SSA Friction Law = String "linear" 
 ! SSA Min Effective Pressure = Real 1.0e-6
  !! Needed for Linear, Weertman and Coulomb 
  SSA Friction Parameter = Real 0.0 
  !! Needed for Weertman and Coulomb
  !SSA Friction Exponent = Real $1.0/n
  !SSA Friction Linear Velocity = Real 0.0001
  !! Needed for Coulomb only
  !SSA Friction Post-Peak = Real 1.0
  !SSA Friction Maximum Value = Real 0.5
End


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!		SOLVERS		       !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Solver 2
exec solver = "before all"
  Equation = "Initial Floatation"
  Procedure = File "./../PROG/MPM_Floatation" "Floatation"
  Variable = "Mask"
  Bottom Surface Name = String "Zb" 
  Top Surface Name = String "Zs"
  Thickness Variable Name = String "H"
End

Solver 3
exec solver = "before all"
  Equation = "MPM Init"
  Procedure = "./../PROG/MPM" "MPM_Initialize"
 
  Initialization Condition Variable = String Surface
  Passive Mask Variable Name = String "Surface"
  InvVisc Variable Name = String "InvVisc"
  Velocity Variable Name = String "SSAVelocity"
  Additional Initial D Variable Name = String "Rift2"
  Thickness Variable Name = String "H"  
  Friction Parameter Name = String "FP"
  Surface Height Variable Name = String "Zs"
  Damage Mask Variable Name = String "Mask"
  EF Variable Name = String "EF"
  Bedrock Variable Name = String "bed"  
End

Solver 4
  Equation = "MPM SSA"
  Variable = -dofs 2 "SSAVelocity"
  Procedure = "./../PROG/MPM" "MPM_SSA"
  Calculate Loads = Logical True
  Apply Limiter =  True

  GL integration points number = Integer 4
  Particle Reweighting = Logical True
 
  xpic m = Integer 5 
  xpic interval = Integer 1

  Linear System Solver = Iterative
  Linear System Iterative Method = BiCGStab
  Linear System Max Iterations = 10000
  Linear System Preconditioning = "ILU2"
  Linear System Convergence Tolerance = 1.0e-7 
  Nonlinear System Max Iterations = 200
  Nonlinear System Convergence Tolerance  = 1.0e-7 
  Nonlinear System Newton After Iterations = 1500 
  Nonlinear System Newton After Tolerance = 1.0e-4 
  Nonlinear System Relaxation Factor = 0.95 
  Steady State Convergence Tolerance = Real 1.0e-3

  Linear System Abort Not Converged = Logical False

  Use Adaptive Relaxation = Logical True
  Adaptive Norm Mult Threshold = Real 1.5 

  Max Norm = Real 1.0e16

  Exported Variable 1 = -dofs 1 "zb"
  Exported Variable 2 = -dofs 2 "Vstar"
  Exported Variable 3 = -dofs 2 "Vplus"
  Exported Variable 4 = -dofs 1 "rift"
  Exported Variable 5 = -dofs 1 "EF"
  Exported Variable 6 = -dofs 1 "Particle B"
  Exported Variable 7 = -dofs 1 "weight"
  Exported Variable 8 = -dofs 1 "icerises"
 

  Filename Prefix = String "$Step$_fail_tongue"   
  Filename Directory = String "./fail/"
  Ascii Output = Logical True

  Output Format = String "vtu"
  Save All = Logical True
End

Solver 5
  Equation = "update particle position and constants, splitting"
  Procedure = "./../PROG/MPM" "ParticleUpdates"
End

Solver 6
 Exec Solver = 1
  Equation = "Updates_0"
  Procedure= "ElmerIceSolvers" "UpdateExport"
  Variable = -nooutput "dumy"
  Exported Variable 1 = -dofs 1 "inflow 1"
  Exported Variable 2 = -dofs 1 "inflow 2"
End

Solver 7
  Equation = "update particle H and Mass"
  Procedure = "./../PROG/MPM" "UpdateParticleHandMass"
End

Solver 8
!Exec Solver = never
  Equation = "update H,Velocity,Binit on Mesh from Particles"
  Procedure = "./../PROG/MPM" "ParticlesToMesh"
  Weight H = Logical True
End

Solver 9
!Exec Solver = never
  Equation = "Updates_1"
  Procedure= "ElmerIceSolvers" "UpdateExport"
  Variable = -nooutput "dumy"
  Exported Variable 1 = -dofs 1 "H"
End

Solver 10
!Exec Solver = never
  Equation = "Floatation"
  Procedure = File "./../PROG/MPM_Floatation" "Floatation"
  Variable = "Mask"
  Bottom Surface Name = String "Zb" 
  Top Surface Name = String "Zs"
  Thickness Variable Name = String "H"
End

Solver 11
!Exec Solver = never
  Equation = "update particle Gmask,bed,gradzs,gradvel,ef,fp,binit,gridvel"
  Procedure = "./../PROG/MPM" "MeshToParticles"
End

Solver 12
!Exec Solver = never
  Procedure = "./../PROG/MPM" "SaveParticleData"
  Equation = "save stuff"

  Ascii Output = Logical True

  Output Format = String "vtu"
  
  Output Interval = Integer 1 
  Use Output Interval = Logical False

  Use Always Save Time = Logical False 
  Always Save Time = Real 0.0

  Save Interval = Real 1.0
  StopTime = Real  90.0 

  Filename Prefix = String $Step

  Filename Directory = String "./results/"

  Vector Field 1 = String "velocity"
  Vector Field 2 = String "length"
  Vector Field 3 = String "gradvel"
  Vector Field 4 = String "gridvelocity"  
  Vector Field 5 = String "gradzs"  
  Vector Field 6 = String "principal_strain_rates"
  Vector Field 7 = String "principal_deviatoric_stresses"
  Vector Field 8 = String "pdse_two"
  !Vector Field  = String "strain"  
  !Vector Field  = String "dav"
  !Vector Field  = String "damage"  
  !Vector Field  = String "dav"
  !Vector Field  = String "principal_damage"
  !Vector Field  = String "pde_two"
  !Vector Field  = String "psre_two"
  !Vector Field  = String "damageii"
  !Vector Field  = String "damageiii"
  !Vector Field  = String "bz"
  !Vector Field  = String "pde_one"
  !Vector Field  = String "pde_three"
  !Vector Field  = String "dd"
  !Vector Field  = String "nextcoordinate"
  !Vector Field  = String "f"
  !Vector Field  = String "origlength"

  Scalar Field 1 = String "h"
  Scalar Field 2 = String "particle time"
  Scalar Field 3 = String "gmask"
  Scalar Field 4 = String "no"
  Scalar Field 5 = String "origno"
  Scalar Field 6 = String "status"
  Scalar Field 7 = String "ElementIndex"
  Scalar Field 8 = String "fp"
  Scalar Field 9  = String "gvolume"
  Scalar Field 10 = String "pvolume"  
  !Scalar Field  = String "damstatus"
  !Scalar Field  = String "mb"
  !Scalar Field  = String "healtime"
  !Scalar Field  = String "viscosity"
  !Scalar Field  = String "bedrock"
  !Scalar Field  = String "mass"  
  !Scalar Field  = String "ef"
  !Scalar Field  = String "binit"
  !Scalar Field  = String "particle dt"
End

Solver 1
  Exec Solver = never
  Equation = "Navier-Stokes"
   Stabilization Method = String Bubbles
   Flow Model = Stokes

   Exported Variable 1 = -dofs 1 "surface"
   Exported Variable 2 = -dofs 1 "Hinit"
   Exported Variable 3 = -dofs 1 "btz"
   Exported Variable 4 = -dofs 1 "MB"
   Exported Variable 5 = -dofs 1 "mass"
   Exported Variable 6 = -dofs 1 "TempVar"
   Exported Variable 7 = -dofs 1 "fp"
   Exported Variable 8 = -dofs 1 "invvisc"
   Exported Variable 9 = -dofs 1 "mask"
   Exported Variable 10 = -dofs 1 "rift2"
   Exported Variable 11 = -dofs 1 "dmask"
   Exported Variable 12 = -dofs 1 "zs"
   Exported Variable 13 = -dofs 2 "invvel"
   Exported Variable 14 = -dofs 2 "ssavelocity"   
   Exported Variable 15 = -dofs 2 "PrevVel"
   Exported Variable 16 = -dofs 1 "bed"
   Exported Variable 17 = -dofs 2 "InitVel"
   Exported Variable 18 = -dofs 1 "InitVelMag"
   Exported Variable 19 = -dofs 4 "Mesh Damage"

End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!           EQUATION                 !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Equation 1
  Active Solvers(12) = 1 2 3 4 5 6 7 8 9 10 11 12
End


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!       BOUNDARY CONDITIONS          !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Boundary Condition 1
 Target Boundaries(1) = 1

 PrevVel 1 = Real 0.0 
 PrevVel 2 = Real 0.0
 VPlus 1 = Real 0.0 
 VPlus 2 = Real 0.0 

 SSAVelocity 1 = Real 0.0
 SSAVelocity 2 = Real 0.0
End

Boundary Condition 2
 Target Boundaries(1) = 2
 Zero Normal Vel = Logical True

 Normal-Tangential SSAVelocity = Logical True
 SSAVelocity 1 = Real 0.0
End


Boundary Condition 3
 Target Boundaries(1) = 3
 Calving Front = Logical True
End

Boundary Condition 4
 Target Boundaries(1) = 4

 Zero Normal Vel = Logical True

 Normal-Tangential SSAVelocity = Logical True
 SSAVelocity 1 = Real 0.0

 Periodic BC Rotate(3) = Real 0 0 $theta
 Periodic BC = Integer 2
 Periodic BC SSAVelocity 1 = Logical True
 Periodic BC SSAVelocity 2 = Logical True
 Periodic BC Use Lagrange Coefficient = Logical True
End

Boundary Condition 5
 Target Boundaries(1) = 5
 Passive Target = Logical True
 Calving Front = Logical True
End
